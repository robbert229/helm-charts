kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
    app.kubernetes.io/name: "{{ include "pgbouncer.name" . }}"
    helm.sh/chart: {{ include "pgbouncer.chart" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: "pgbouncer"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "pgbouncer.name" . }}"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      component: "pgbouncer"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "pgbouncer.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        component: "pgbouncer"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      affinity:
        {{- if .Values.additionalAffinities }}
        {{- toYaml .Values.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: "{{ include "pgbouncer.name" . }}"
                  app.kubernetes.io/instance: "{{ .Release.Name }}"
                  component: "pgbouncer"
        {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: "{{ include "pgbouncer.name" . }}"
                    app.kubernetes.io/instance: "{{ .Release.Name }}"
                    component: "pgbouncer"
        {{- end }}
      {{- if ne .Values.imagePullSecret "" }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        - name: pgbouncer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - pgbouncer
            - -u
            - pgbouncer
            - /etc/pgbouncer/pgbouncer.ini
          env:
            {{- include "pgbouncer.environment" . | nindent 12 }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
          volumeMounts:
            - name: secret
              subPath: userlist.txt
              mountPath: /etc/pgbouncer/userlist.txt
              readOnly: true
            - name: secret
              subPath: pgbouncer.ini
              mountPath: /etc/pgbouncer/pgbouncer.ini
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.metrics.enabled }}
        - name: metrics
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
{{- range $key, $value := .Values.metricsEnvs }}
            - name: {{ $key }}
              value: {{ $value }}
{{- end }}
          ports:
            - containerPort: 9127
              name: metrics
              protocol: "TCP"
          livenessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
          readinessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
          resources:
            {{- toYaml .Values.metrics.resources | nindent 12 }}
{{- end }}
      volumes:
        - name: config